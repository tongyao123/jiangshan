<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.jiangshan.mapper.domain.AccessPermissionGroupMapper">
  <resultMap id="BaseResultMap" type="com.example.jiangshan.entity.AccessPermissionGroup">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="hik_permission_group_id" jdbcType="CHAR" property="hikPermissionGroupId" />
    <result column="permission_group_name" jdbcType="VARCHAR" property="permissionGroupName" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, hik_permission_group_id, permission_group_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from access_permission_group
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from access_permission_group
    where permission_group_id = #{permissionGroupId,jdbcType=CHAR}
  </delete>

  <insert id="insertSelective" parameterType="com.example.jiangshan.entity.AccessPermissionGroup">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into access_permission_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="hikPermissionGroupId != null">
        hik_permission_group_id,
      </if>
      <if test="permissionGroupName != null">
        permission_group_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="hikPermissionGroupId != null">
        #{hikPermissionGroupId,jdbcType=CHAR},
      </if>
      <if test="permissionGroupName != null">
        #{permissionGroupName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="listPermissionGroups"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from access_permission_group
  </select>

  <insert id="batchInsert">
    insert into access_permission_group
    (id, hik_permission_group_id, permission_group_name)
    values
    <foreach collection="accessPermissionGroups" item="accessPermissionGroup" separator=",">
      (#{accessPermissionGroup.id,jdbcType=CHAR},
      #{accessPermissionGroup.hikPermissionGroupId,jdbcType=CHAR},
      #{accessPermissionGroup.permissionGroupName,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>